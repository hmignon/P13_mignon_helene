version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Initialize venv / Install deps
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pytest
      - run:
          name: Linting
          command: |
            . venv/bin/activate
            flake8

  containerize:
    docker:
      - image: cimg/python:3.10.2
    environment:
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      SENTRY_DSN: $SENTRY_DSN
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Containerize
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker build -t image_oc_lettings_site .
            docker tag image_oc_lettings_site mignonh/oc_lettings:$CIRCLE_SHA1
            docker push mignonh/oc_lettings:$CIRCLE_SHA1

  deploy:
    machine:
      image: ubuntu-1604:202010-01
    steps:
      - checkout
      - run:
          name: Deploy Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a oc-lettings-mignonh web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a oc-lettings-mignonh web

workflows:
  main:
    jobs:
      - build-and-test
      - containerize:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build-and-test
            - containerize
          filters:
            branches:
              only:
                - master
