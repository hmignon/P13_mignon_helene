version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Initialize venv / Install deps
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
      - run:
          name: Linting
          command: |
            . venv/bin/activate
            flake8
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pytest

  containerize:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Containerize
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_LOGIN --password-stdin
            docker build -t image_oc_lettings_site .
            docker tag image_oc_lettings_site mignonh/oc_lettings:$CIRCLE_SHA1
            docker push mignonh/oc_lettings:$CIRCLE_SHA1

# HEROKU_API_KEY=${HEROKU_TOKEN} heroku run python manage.py collectstatic --noinput --clear -a $HEROKU_APP_NAME
  deploy:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run:
          name: Deploy Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku apps:destroy $HEROKU_APP_NAME --confirm $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku apps:create $HEROKU_APP_NAME --region eu --addons=heroku-postgresql
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set SENTRY_DSN=$SENTRY_DSN -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set DEBUG=0 -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a $HEROKU_APP_NAME web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a $HEROKU_APP_NAME web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku run python manage.py migrate -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku run python manage.py loaddata data.json -a $HEROKU_APP_NAME

workflows:
  main:
    jobs:
      - build-and-test
      - containerize:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build-and-test
            - containerize
          filters:
            branches:
              only:
                - master
